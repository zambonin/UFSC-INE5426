Łukasiewicz is a procedural, strongly and statically typed language, with
lexical scope and reserved words, where the operations are output in prefix
notation.

This compiler generates the syntax tree for given Łukasiewicz code. It
currently supports logic and arithmetic operations with integers, floats and
booleans, that optionally can be saved in variables and arrays, as well as
if, else and for constructs.

The debug tracer for the parser can be enabled with the `--debug` flag.

Known issues:
  * a program must not end with a syntax error

Outputs consisting of error messages may be generated with:

  for i in test/invalid/*.in ; do \
    ./lukacompiler < "$i" 1>/dev/null 2> "${i/.in/.out}" ; \
  done
